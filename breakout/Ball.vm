function Ball.new 0
push constant 7
call Memory.alloc 1
pop pointer 0
push argument 0
pop this 0
push argument 1
pop this 1
push constant 5
pop this 2
push argument 2
pop this 3
push constant 0
not
pop this 6
push constant 0
pop this 4
push pointer 0
return
function Ball.getX 0
push argument 0
pop pointer 0
push this 0
return
function Ball.getY 0
push argument 0
pop pointer 0
push this 1
return
function Ball.getRadius 0
push argument 0
pop pointer 0
push this 2
return
function Ball.drawBall 0
push argument 0
pop pointer 0
push this 0
push this 1
push this 2
call Screen.drawCircle 3
pop temp 0
push constant 0
return
function Ball.Movement 0
push argument 0
pop pointer 0
push this 1
push this 2
push this 3
sub
sub
push constant 2
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
not
pop this 4
label IF_FALSE0
push this 0
push this 2
push this 3
sub
sub
push constant 2
lt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
pop this 5
push constant 0
not
pop this 6
label IF_FALSE1
push this 0
push this 2
push this 3
add
add
push constant 509
gt
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 0
pop this 6
push constant 0
not
pop this 5
label IF_FALSE2
push this 4
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push this 1
push this 3
add
pop this 1
goto IF_END3
label IF_FALSE3
push this 1
push this 3
sub
pop this 1
label IF_END3
push this 5
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push this 0
push this 3
sub
pop this 0
goto IF_END4
label IF_FALSE4
push this 0
push this 3
add
pop this 0
label IF_END4
push constant 0
return
function Ball.moveBall 0
push argument 0
pop pointer 0
push pointer 0
call Ball.Movement 1
pop temp 0
push constant 0
return
function Ball.gameOver 0
push argument 0
pop pointer 0
push this 1
push this 2
push constant 2
call Math.multiply 2
add
push constant 256
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
not
return
label IF_FALSE0
push constant 0
return
function Ball.crashWithPaddle 0
push argument 0
pop pointer 0
push constant 0
pop this 4
push this 6
push argument 1
push constant 2
eq
and
push this 5
or
push argument 1
push constant 1
eq
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
return
label IF_FALSE0
push argument 1
push constant 1
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
not
pop this 5
push constant 0
pop this 6
label IF_FALSE1
push argument 1
push constant 2
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 0
pop this 5
push constant 0
not
pop this 6
label IF_FALSE2
push constant 0
return
function Ball.sideCrash 0
push argument 0
pop pointer 0
push this 5
not
pop this 5
push this 6
not
pop this 6
push constant 0
return
function Ball.straightCrash 0
push argument 0
pop pointer 0
push this 4
not
pop this 4
push constant 0
return
