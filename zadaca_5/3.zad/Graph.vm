function Graph.new 0
push constant 1
call Memory.alloc 1
pop pointer 0
push argument 0
pop this 0
push pointer 0
call Graph.axis 1
pop temp 0
push pointer 0
call Graph.draw 1
pop temp 0
push pointer 0
return
function Graph.axis 0
push argument 0
pop pointer 0
push this 0
push constant 128
sub
push constant 0
gt
push this 0
push constant 128
add
push constant 512
lt
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
not
call Screen.setColor 1
pop temp 0
push this 0
push constant 128
sub
push constant 128
push this 0
push constant 128
add
push constant 128
call Screen.drawLine 4
pop temp 0
push this 0
push constant 1
push this 0
push constant 255
call Screen.drawLine 4
pop temp 0
label IF_FALSE0
push constant 0
return
function Graph.draw 4
push argument 0
pop pointer 0
push constant 65
call Array.new 1
pop local 2
push constant 65
call Array.new 1
pop local 3
push constant 32
neg
pop local 1
label WHILE_EXP0
push local 0
push constant 65
lt
not
if-goto WHILE_END0
push local 0
push local 2
add
push local 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push local 3
add
push local 0
push local 2
add
pop pointer 1
push that 0
call Graph.foo 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 1
add
pop local 0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP0
label WHILE_END0
push constant 0
pop local 0
label WHILE_EXP1
push local 0
push constant 64
lt
not
if-goto WHILE_END1
push constant 128
push local 0
push local 3
add
pop pointer 1
push that 0
sub
push constant 0
gt
push constant 128
push local 0
push constant 1
add
push local 3
add
pop pointer 1
push that 0
sub
push constant 0
gt
and
push constant 128
push local 0
push local 3
add
pop pointer 1
push that 0
sub
push constant 256
lt
and
push constant 128
push local 0
push constant 1
add
push local 3
add
pop pointer 1
push that 0
sub
push constant 256
lt
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 0
push local 0
push local 2
add
pop pointer 1
push that 0
add
push constant 128
push local 0
push local 3
add
pop pointer 1
push that 0
sub
push this 0
push local 0
push constant 1
add
push local 2
add
pop pointer 1
push that 0
add
push constant 128
push local 0
push constant 1
add
push local 3
add
pop pointer 1
push that 0
sub
call Screen.drawLine 4
pop temp 0
label IF_FALSE0
push constant 128
push local 0
push local 3
add
pop pointer 1
push that 0
sub
push constant 0
gt
push constant 128
push local 0
push constant 1
add
push local 3
add
pop pointer 1
push that 0
sub
push constant 0
lt
and
push constant 128
push local 0
push local 3
add
pop pointer 1
push that 0
sub
push constant 256
lt
and
push constant 128
push local 0
push constant 1
add
push local 3
add
pop pointer 1
push that 0
sub
push constant 256
lt
and
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 0
push local 0
push local 2
add
pop pointer 1
push that 0
add
push constant 128
push local 0
push local 3
add
pop pointer 1
push that 0
sub
push this 0
push local 0
push constant 1
add
push local 2
add
pop pointer 1
push that 0
add
push constant 1
call Screen.drawLine 4
pop temp 0
label IF_FALSE1
push constant 128
push local 0
push local 3
add
pop pointer 1
push that 0
sub
push constant 0
gt
push constant 128
push local 0
push constant 1
add
push local 3
add
pop pointer 1
push that 0
sub
push constant 0
gt
and
push constant 128
push local 0
push local 3
add
pop pointer 1
push that 0
sub
push constant 256
lt
and
push constant 128
push local 0
push constant 1
add
push local 3
add
pop pointer 1
push that 0
sub
push constant 256
gt
and
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push this 0
push local 0
push local 2
add
pop pointer 1
push that 0
add
push constant 128
push local 0
push local 3
add
pop pointer 1
push that 0
sub
push this 0
push local 0
push constant 1
add
push local 2
add
pop pointer 1
push that 0
add
push constant 255
call Screen.drawLine 4
pop temp 0
label IF_FALSE2
push constant 128
push local 0
push local 3
add
pop pointer 1
push that 0
sub
push constant 0
lt
push constant 128
push local 0
push constant 1
add
push local 3
add
pop pointer 1
push that 0
sub
push constant 0
gt
and
push constant 128
push local 0
push local 3
add
pop pointer 1
push that 0
sub
push constant 256
lt
and
push constant 128
push local 0
push constant 1
add
push local 3
add
pop pointer 1
push that 0
sub
push constant 256
lt
and
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push this 0
push local 0
push local 2
add
pop pointer 1
push that 0
add
push constant 1
push this 0
push local 0
push constant 1
add
push local 2
add
pop pointer 1
push that 0
add
push constant 128
push local 0
push constant 1
add
push local 3
add
pop pointer 1
push that 0
sub
call Screen.drawLine 4
pop temp 0
label IF_FALSE3
push constant 128
push local 0
push local 3
add
pop pointer 1
push that 0
sub
push constant 0
gt
push constant 128
push local 0
push constant 1
add
push local 3
add
pop pointer 1
push that 0
sub
push constant 0
gt
and
push constant 128
push local 0
push local 3
add
pop pointer 1
push that 0
sub
push constant 256
gt
and
push constant 128
push local 0
push constant 1
add
push local 3
add
pop pointer 1
push that 0
sub
push constant 256
lt
and
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push this 0
push local 0
push local 2
add
pop pointer 1
push that 0
add
push constant 255
push this 0
push local 0
push constant 1
add
push local 2
add
pop pointer 1
push that 0
add
push constant 128
push local 0
push constant 1
add
push local 3
add
pop pointer 1
push that 0
sub
call Screen.drawLine 4
pop temp 0
label IF_FALSE4
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP1
label WHILE_END1
push local 2
call Array.dispose 1
pop temp 0
push local 3
call Array.dispose 1
pop temp 0
push constant 0
return
function Graph.foo 0
push argument 0
push argument 0
call Math.multiply 2
push constant 8
push argument 0
call Math.multiply 2
add
push constant 15
sub
return
function Graph.Dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return